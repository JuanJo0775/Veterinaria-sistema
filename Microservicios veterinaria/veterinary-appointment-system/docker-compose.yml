#version: '3.8'

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${DB_USER:-veterinary}
      POSTGRES_PASSWORD: ${DB_PASSWORD:-password}
      POSTGRES_DB: ${DB_NAME:-veterinary_db}
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./database/init.sql:/docker-entrypoint-initdb.d/init.sql
    ports:
      - "5432:5432"
    networks:
      - vet-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER:-veterinary}"]
      interval: 5s
      timeout: 5s
      retries: 5

  auth-service:
    build: auth-service
    ports:
      - "5001:5001"
    environment:
      DATABASE_URL: postgresql://${DB_USER:-veterinary}:${DB_PASSWORD:-password}@db:5432/${DB_NAME:-veterinary_db}
      JWT_SECRET_KEY: ${JWT_SECRET_KEY:-your-secret-key}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - vet-network
    restart: unless-stopped

  appointment-service:
    build: appointment-service
    ports:
      - "5002:5002"
    environment:
      DATABASE_URL: postgresql://${DB_USER:-veterinary}:${DB_PASSWORD:-password}@db:5432/${DB_NAME:-veterinary_db}
      AUTH_SERVICE_URL: http://auth-service:5001
    depends_on:
      db:
        condition: service_healthy
      auth-service:
        condition: service_started
    networks:
      - vet-network
    restart: unless-stopped

  notification-service:
    build: notification-service
    ports:
      - "5003:5003"
    environment:
      DATABASE_URL: postgresql://${DB_USER:-veterinary}:${DB_PASSWORD:-password}@db:5432/${DB_NAME:-veterinary_db}
      MAIL_SERVER: ${MAIL_SERVER:-smtp.gmail.com}
      MAIL_PORT: ${MAIL_PORT:-587}
      MAIL_USERNAME: ${MAIL_USERNAME}
      MAIL_PASSWORD: ${MAIL_PASSWORD}
    depends_on:
      db:
        condition: service_healthy
    networks:
      - vet-network
    restart: unless-stopped

  frontend:
    build: frontend
    ports:
      - "5000:5000"
    environment:
      AUTH_SERVICE_URL: http://auth-service:5001
      APPOINTMENT_SERVICE_URL: http://appointment-service:5002
      NOTIFICATION_SERVICE_URL: http://notification-service:5003
    depends_on:
      - auth-service
      - appointment-service
      - notification-service
    networks:
      - vet-network
    restart: unless-stopped

networks:
  vet-network:
    driver: bridge

volumes:
  postgres_data: